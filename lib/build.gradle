apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'


ext {
    version = "1.0.0-RC.0"
    bintrayRepo = 'sellmair'
    bintrayName = 'looper'

    publishedGroupId = 'io.sellmair'
    libraryName = 'Looper'
    artifact = 'looper'

    libraryDescription = 'A simple Androd Looper-Thread implementation'

    gitUrl = 'https://github.com/sellmair/looper'
    siteUrl = 'https://github.com/sellmair/looper'


    libraryVersion = version

    developerId = 'sellmair'
    developerName = 'Sebastian Sellmair'
    developerEmail = 'sebastiansellmair@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0-rc02'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}



apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {
    publications {
        aar(MavenPublication) {

            // Thanks to https://stackoverflow.com/questions/24743562/gradle-not-including-dependencies-in-published-pom-xml
            // ###############################################################
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.api.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
            // ##############################################################


            groupId "$publishedGroupId"
            version = "$libraryVersion"
            artifactId "$bintrayName"

            artifact("$buildDir/outputs/aar/lib-release.aar")
            artifact sourceJar
        }
    }
}

// Bintray
bintray {
    user = "$bintray_user"
    key = "$bintray_apikey"
    publications = ['aar']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            name = "$libraryVersion"
            desc = "$libraryVersion"
            gpg {
                sign = false //Determines whether to GPG sign the files. The default is false
                passphrase = "$bintray_gpg_password"
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}



